sap.ui.define(["./baseController","sap/m/Token","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageToast","sap/ui/model/json/JSONModel"],function(e,t,o,i,n,a){"use strict";return e.extend("com.app.centrallibrary.controller.adminView",{onInit:function(){n.show("Welcome to the Central Library");const e=new a({authorName:"",title:"",quantity:"",availableQuantity:"",ISBN:"",genre:""});const o=new a({borrowerName:"",borrowerUserId:"",borrowingBookName:"",borrowingBookISBN:"",dueOn:""});this.getView().setModel(e,"newBookModel");this.getView().setModel(o,"newLoanModel");const i=this.getView();const s=i.byId("idAuthorInputValue"),r=i.byId("idTitleInputValue"),l=i.byId("idISBNInputValue");const g=[s,r,l];g.forEach(e=>{e.addValidator(function(e){if(true){var o=e.text;return new t({key:o,text:o})}})});const d=this.getOwnerComponent().getRouter();d.attachRoutePatternMatched(this.onCurrentUserDetails,this)},onCurrentUserDetails:function(e){const{userId:t}=e.getParameter("arguments");this.ID=t;const o=e.getParameter("name");const i=this.getView().byId("idAdminDataPage");i.bindElement(`/UserLogin(${t})`,{expand:""})},onLogoutPress:function(){const e=this.getOwnerComponent().getRouter();n.show("Successfully Logged Out");e.navTo("RouteloginView")},onFilterClick:function(){debugger;const e=this.getView(),t=e.byId("idAuthorInputValue").getTokens(),n=e.byId("idTitleInputValue").getTokens(),a=e.byId("idISBNInputValue").getTokens(),s=e.byId("idBooksTable"),r=[];var l=[t,n,a];l.forEach(e=>{if(e){e.filter(e=>{t.length>0?r.push(new o("authorName",i.EQ,e.getKey())):"";n.length>0?r.push(new o("title",i.EQ,e.getKey())):"";a.length>0?r.push(new o("ISBN",i.EQ,e.getKey())):""})}});s.getBinding("items").filter(r)},onClear:function(){const e=this.getView(),t=e.byId("idAuthorInputValue").destroyTokens(),o=e.byId("idTitleInputValue").destroyTokens();sBookISBN=e.byId("idISBNInputValue").destroyTokens()},onRefresh:function(){debugger;this.getView().byId("idBooksTable").getBinding("items").refresh()},onEditBook:async function(){debugger;if(!this.oCreateBookPop){this.oCreateBookPop=await this.loadFragment("createBook")}var e=this.byId("idBooksTable").getSelectedItem();if(e){var t=e.getBindingContext().getObject().authorName;var o=e.getBindingContext().getObject().title;var i=e.getBindingContext().getObject().quantity;var s=e.getBindingContext().getObject().availableQuantity;var r=e.getBindingContext().getObject().genre;var l=e.getBindingContext().getObject().ISBN;const n=new a({authorName:t,title:o,quantity:i,availableQuantity:s,genre:r,ISBN:l});this.getView().setModel(n,"newBookModel");this.oCreateBookPop.open()}else{n.show("Select an Item to Edit")}},onCreateBtnPress:async function(){debugger;if(!this.oCreateBookPop){this.oCreateBookPop=await this.loadFragment("createBook")}this.oCreateBookPop.open()},onUpdateBook:function(){var e=this.getView().getModel("newBookModel").getData();var t=this.getView().byId("idBooksTable");var a=t.getSelectedItem();var s=a.getBindingContext().getObject().title;var r=this.getView().getModel();var l=r.bindList("/Books");l.filter([new o("title",i.EQ,s)]);var g=this;l.requestContexts().then(function(o){if(o.length>0){var i=o[0];var a=i.getObject();i.setProperty("title",e.title);i.setProperty("authorName",e.authorName);i.setProperty("quantity",e.quantity);i.setProperty("availableQuantity",e.availableQuantity);i.setProperty("genre",e.genre);i.setProperty("ISBN",e.ISBN);const s=parseInt(e.availableQuantity);const l=parseInt(e.quantity);if(s<=l){r.submitBatch("updateGroup").then(function(){t.getBinding("items").refresh();g.oCreateBookPop.close();n.show("Book Updated Successfully")}).catch(function(e){g.oCreateBookPop.close();sap.m.MessageBox.error("Failed to update book: "+e.message)})}else{n.show("Avilable Stock should be lesser or equal to the Stock")}}else{n.show("Book not found")}})},onCreateBook:function(){debugger;var e=this.getView();var t=this.getView().getModel(),o=t.bindList("/Books");var i=this.getView().getModel("newBookModel").getData();o.create(i,{success:function(){n.show("Book created successfully")},refresh:e.byId("idBooksTable").getBinding("items").refresh(),error:function(){n.show("Error creating book")}});this.oCreateBookPop.close()},onCloseCreateBookDailog:function(){if(this.oCreateBookPop.isOpen()){this.oCreateBookPop.close()}},onDeleteBooks:function(e){var t=this.byId("idBooksTable").getSelectedItem();if(t){var o=t.getBindingContext().getObject().title;t.getBindingContext().delete("$auto").then(()=>{n.show(o+" SuccessFully Deleted")},e=>{n.show("Deletion Error: ",e)});this.getView().byId("idBooksTable").getBinding("items").refresh()}else{n.show("Please Select a Book to Delete")}},onActiveLoansClick:async function(){debugger;if(!this.oActiveLoanPopUp){this.oActiveLoanPopUp=await this.loadFragment("ActiveLoans")}this.oActiveLoanPopUp.open();this.getView().byId("idLoanTable").getBinding("items").refresh()},onCloseActiveLoans:function(){if(this.oActiveLoanPopUp.isOpen()){this.oActiveLoanPopUp.close()}},onReservationsClick:async function(){debugger;if(!this.oReservationsDialog){this.oReservationsDialog=await this.loadFragment("Reservations")}this.getView().byId("idReservationsTable").getBinding("items").refresh();this.oReservationsDialog.open()},onIssueBookFromReservations:function(){debugger;const e=this.getView(),t=e.byId("idReservationsTable").getSelectedItem();if(!t){n.show("Please select a reservation to issue the book")}const a=t.getBindingContext(),s=t.getBindingContext().getObject().ReservedUserName,r=t.getBindingContext().getObject().ReservedUserId,l=t.getBindingContext().getObject().ReservedBook;let g=new Date;g.setDate(g.getDate()+15);var d=g.getFullYear();var u=g.getMonth()+1;var c=g.getDate();var h=`${d}-${u}-${c}`;const b=this.getView().getModel(),w=this.getView().byId("idBooksTable");var v=b.bindList("/Books");v.filter([new o("title",i.EQ,l)]);v.requestContexts().then(function(e){if(e.length>0){var t=e[0];var o=t.getObject();if(o.availableQuantity>0){const e=b.bindList("/Activeloans");e.create({borrowerName:s,borrowerUserId:r,borrowingBookName:l,dueOn:h});a.delete("$auto").then(function(){n.show("Book Issued")});o.availableQuantity-=1;t.setProperty("availableQuantity",o.availableQuantity);b.submitBatch("updateGroup")}else{n.show("Book not available yet")}}else{n.show("Book not available to issue")}})},onReservationsClose:function(){if(this.oReservationsDialog.isOpen()){this.oReservationsDialog.close()}},onAddNewLoanPress:async function(){debugger;let e=new Date;e.setDate(e.getDate()+15);var t=e.getFullYear();var o=e.getMonth()+1;var i=e.getDate();var n=`${t}-${o}-${i}`;if(!this.oNewLoanDailog){this.oNewLoanDailog=await this.loadFragment("loanCreate");const e=new a({borrowerName:"",borrowerUserId:"",borrowingBookName:"",borrowingBookISBN:"",dueOn:n});this.getView().setModel(e,"newLoanModel")}this.oNewLoanDailog.open()},onNewLoanDailogClose:function(){if(this.oNewLoanDailog.isOpen()){this.oNewLoanDailog.close()}},onDateChange:function(e){var t=e.getSource();var o=t.getValue();var i=/^\d{4}-\d{2}-\d{2}$/;if(o.match(i)){var a=new Date(o);var s=new Date;s.setHours(0,0,0,0);if(a>=s){t.setValueState("None");n.show("Date is valid")}else{t.setValueState("Error");n.show("Date cannot be in the past date.")}}else{t.setValueState("Error");n.show("Invalid date format. Please use YYYY-MM-DD.")}},onSaveNewLoan:function(){try{debugger;var e=this.getView().getModel(),t=e.bindList("/Activeloans");var a=this.getView().getModel("newLoanModel").getData();var s=a.borrowerUserId;var r=a.borrowerName;var l=a.borrowingBookISBN;var g=a.borrowingBookName;var d=this;if(s){var e=this.getView().getModel();var u=e.bindList("/UserLogin");u.filter([new o("userid",i.EQ,s),new o("userName",i.EQ,r)]);u.requestContexts().then(function(s){debugger;if(s.length>0){var r=e.bindList("/Books");r.filter([new o("title",i.EQ,g),new o("ISBN",i.EQ,l)]);r.requestContexts().then(function(o){if(o.length>0){var i=o[0];var s=i.getObject();if(s.availableQuantity>0){s.availableQuantity-=1;t.create(a);i.setProperty("availableQuantity",s.availableQuantity);e.submitBatch("updateGroup").then(function(){d.oNewLoanDailog.close();n.show("Book issued")})}else{n.show("Book not available")}}else{n.show("Book data not found")}})}else{n.show("User data not matching with existing records")}})}else{n.show("Enter correct user Data to Continue")}}catch(e){n.show(e)}},onClearLoanButtonPress:function(){debugger;const e=this.getView(),t=e.byId("idLoanTable").getSelectedItem();if(t){var a=t.getBindingContext(),s=a.getObject(),r=s.borrowingBookName,l=this.getView().getModel(),g=s.borrowerName;a.delete("$auto").then(function(){n.show(g+" Loan Closed");var e=l.bindList("/Books");e.filter([new o("title",i.EQ,r)]);e.requestContexts().then(function(e){if(e.length>0){var t=e[0];var o=t.getObject();var i=o.availableQuantity;var a=parseInt(i);var s=a+1;t.setProperty("availableQuantity",s);l.submitBatch("updateGroup",{success:function(){n.show("Book quantity updated successfully")},error:function(e){n.show("Error updating book quantity: "+e.message)}})}else{n.show("Book not found")}})},function(e){n.show("Deletion Error: "+e.message)});this.getView().byId("idLoanTable").getBinding("items").refresh()}else{n.show("Please Select a user to close the loan")}this.oDeleteCautionDailog.close()}})});